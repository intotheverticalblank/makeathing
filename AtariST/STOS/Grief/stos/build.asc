10 rem *** STOS: The Game Creator
20 rem ***
30 rem *** Visual Studio Code Lanugage Extension
40 rem *** Written by Neil Halliday
50 rem ***
60 rem ***
70 rem *** Rendertest4 : main program file
80 :
90 :
100 key(2)="default"
110 key(3)="fload"+chr$(34)+"*.asc"+chr$(34)
120 :
130 rem *** Error Handling ***
140 on error goto 880
150 messages$="Messages: "
160 :
170 curs off:flash off:key off:hide:mode 0
180 :
190 reserve as screen 10: rem  needed for screen copy versions
200 :
210 load "GRSPR.mbk",1
220 XP=hunt(start(1) to start(1)+length(1),"PALT")
230 XP=XP+4 : for I=0 to 15 : colour I,deek(I*2+XP) : next I
240 :
250 rem ******************** version 4 ********************
260 rem 16px offset movement
270 rem 1. Copy 9 sprites to screen at 16px offset
280 rem turn autoback off
290 rem do 16 px offset version
300 :
310 rem *** copy formation to screen 10
320 rem *** at 16px offset
330 :
340 for sctr=0 to 8
350 sprite sctr+1,sctr*16,0,7
360 next
370 :
380 pen 2:locate 1,22: print "press a key"
390 wait key
400 screen copy physic,0,0,160,30 to 10,16,0
410 sprite off:rem turns off all sprites
420 rem do not need a separte sprite background.
430 rem this adds speed
440 auto back off
450 xoff=0
460 ctr=0
470 dx=2
480 x1=0
490 y1=0
500 x2=320
510 y2=30
520 xend=160: rem 320 - (144+16)  The screem width minus the formation length + offset
530 :
540 cls
550 logic=back
560 :
570 fctr=0 : rem number of frames counted
580 timer=0
590 fps=0
600 se=0: rem seconds elapsed
610 :
620 repeat
630 :
640 rem the x1 and x2 in cls have to be 0 or 16 multiples
650 cls logic
660 xoff=x1 MOD 16
670 screen copy 10,16-xoff,y1,xoff+160,y2 to logic,x1,0
680 x1=x1+dx
690 if x1=0 then dx=2
700 if x1=xend then dx=-2
710 :
720 rem FPS
730 inc fctr: rem inc the frame counter
740 :
750 if timer >=50  then inc se:timer=0
760 if se>5 then fps=fctr/se: t$=str$(fps)+ "FPS" + chr$(0):rem fps=number of frames / number of seconds = fps.
770 locate 30, 1:print t$
780 :
790 screen swap:wait vbl
800 until fctr=300
810 :
820 messages$=messages$+" :made it out of render loop"
830 cls
840 pen 2:locate 1,19: print "fps";t$
850 locate 1,20: print "press a key"
860 wait key
870 :
880 rem @errortrap
890 default
900 print "output: ";messages$
910 print "error number";ERRN
920 print "line number";ERRL
