 set zoneheight 16
 displaymode 160A
 set plotvalueonscreen on
 set romsize 128kRAM
 set dlmemory $4000 $7FFF
 doublebuffer on 

 incgraphic font.png 160A 
 characterset font
 alphachars '0123456789abcdefghijklmnopqrstuvwxyz>`?!/.,-_()[]&AB '

 rem sprites
 incgraphic images/player1.png 160A 0 1 3 2
 incgraphic images/player2.png 160A 0 1 3 2
 incgraphic images/player3.png 160A 0 1 3 2
 incgraphic images/player4.png 160A 0 1 3 2

 incgraphic images/orb1.png 160A 0 3 2 1
 incgraphic images/orb2.png 160A 0 3 2 1
 incgraphic images/orb3.png 160A 0 3 2 1 
 incgraphic images/orb4.png 160A 0 3 2 1
 incgraphic images/orb5.png 160A 0 3 2 1 
 incgraphic images/orb6.png 160A 0 3 2 1 

 incgraphic images/portal1_top.png 160A 0 1 2 3 
 incgraphic images/portal2_top.png 160A 0 1 2 3 
 incgraphic images/portal1_bottom.png 160A 0 1 2 3 
 incgraphic images/portal2_bottom.png 160A 0 1 2 3 

 incgraphic images/drone1.png 160A 0 2 3 1 
 incgraphic images/drone2.png 160A 0 3 2 1  
 incgraphic images/drone3.png 160A 0 3 1 2  
 incgraphic images/drone4.png 160A 0 3 2 1     
 
 incbanner  images/title.png 160B 

 BACKGRND=$00

 dim bgColor  = var1
 dim wait = var2
 dim lives = var3
 rem dim score = var4
 dim playerX =var5
 dim playerY = var6
 dim playerAnimFrame = var7
 dim playerAnimWait = var8
 
 dim tempX =var9
 dim tempY = var10
 dim tempAnimFrame = var11
 dim tempAnimWait = var12
 dim tempXVelocity = var13
 dim tempYVelocity = var14
 dim tempCaptured = var15


 dim randomSeed = var16
 dim maxOrbs = var17

 dim playerSpeed =var18
 dim level = var19

 dim portalX =var20
 dim portalY = var21
 dim portalAnimFrame = var22
 dim portalAnimWait = var23
 dim orbsLeft = var24
 dim maxDrones =var25

 rem dim droneX =var26
 rem dim droneY = var27
 rem dim droneAnimFrame = var28
 rem dim droneAnimWait = var29


 bgColor = $00
 wait = 0
 lives = 0
 score0 = 0
 playerY = 0
 playerX = 0
 playerAnimFrame = 0
 playerAnimWait = 0

 tempX = 0
 tempY = 0
 tempAnimFrame = 0
 tempAnimWait = 0
 tempXVelocity = 0
 tempYVelocity = 0

 randomSeed = 1
 level = 0

  rem orbs space for 32
  dim orbX = $2200
  dim orbY = $2220
  dim orbXVelocity = $2240
  dim orbYVelocity = $2260
  dim orbAnimFrame = $2280
  dim orbAnimWait =  $22A0
  dim orbCaptured = $22C0

  


 BACKGRND = $00

setTitleColors
 P0C1 = title_color1
 P0C2 = title_color2
 P0C3 = title_color3
 P1C1 = title_color4
 P1C2 = title_color5
 P1C3 = title_color6
 P2C1 = title_color7
 P2C2 = title_color8
 P2C3 = title_color9
 P3C1 = title_color10
 P3C2 = title_color11
 P3C3 = title_color12


titleLoop
 clearscreen
 plotbanner title 0 32 50

 plotchars 'quantum lay over'  3 47 6
 plotchars 'fire to start'  2 54 10
 if joy0fire0  || joy0fire1 then goto initGame
 
 randomSeed = randomSeed + 1
 if randomSeed > 254  then randomSeed = 1
 
 drawscreen

 goto titleLoop

 
initGame
 
 lives = 3
 score0 = 0
 BACKGRND=$00
 playerX = 70
 playerY = 90
 playerAnimFrame = 0
 playerAnimWait = 0
 playerSpeed = 2
 level = 0

 rand = randomSeed

 rem pallette 0 text
  P0C1=$0F
  P0C2=$0C
  P0C3=$0A

 rem pallette 1 player
  P1C1 = $0D 
  P1C2 = $08
  P1C3 = $33 

 rem orb colors

  P2C1 = $92
  P2C2 = $94
  P2C3 = $99

 rem portal colors

  P3C1 = $55
  P3C2 = $63
  P3C3 = $60

 

initLevel  
 level = level + 1
 maxOrbs = 32
 orbsLeft = 32
 portalX = 64
 portalY = 80
 gosub makeOrbs


gameLoop

 clearscreen

 rem *******
 rem * Update & Draw Orbs
 rem *******

 m = maxOrbs - 1
 for i = 0 to m
    tempCaptured = orbCaptured[i]
    if tempCaptured then goto _skipOrbDraw
    tempX = orbX[i]
    tempY = orbY[i]
    tempAnimFrame = orbAnimFrame[i]
    tempAnimWait = orbAnimWait[i]
    tempXVelocity = orbXVelocity[i]
    tempYVelocity  =orbYVelocity[i]

    tempX = tempX + tempXVelocity
    tempY = tempY + tempYVelocity

    plotsprite orb1 2 tempX tempY tempAnimFrame
    tempAnimWait = tempAnimWait +1
    if tempAnimWait > 1 then  tempAnimFrame = tempAnimFrame + 1 : tempAnimWait = 0
    if tempAnimFrame > 5 then tempAnimFrame = 0
    orbX[i] = tempX 
    orbY[i] = tempY
    orbAnimFrame[i] = tempAnimFrame
    orbAnimWait[i] = tempAnimWait 
_skipOrbDraw    
 next





 plotsprite player1 1 playerX playerY playerAnimFrame
 playerAnimWait = playerAnimWait +1
 if playerAnimWait > 2 then  playerAnimFrame = playerAnimFrame + 1 : playerAnimWait = 0
 if playerAnimFrame > 3 then playerAnimFrame = 0

 
 if joy0left  then playerX=playerX - playerSpeed
 if joy0right then playerX=playerX +  playerSpeed
 if joy0up  then playerY=playerY - playerSpeed
 if joy0down then playerY=playerY +  playerSpeed

 if playerX > 144 && playerX < 160 then playerX = 144 ; went off right
 if playerX <= 255 && playerX > 144 then playerX = 0   ;went off left
 if playerY > 183 && playerY < 199 then playerY = 183  ; went off bottom
 if playerY <= 255 && playerY > 239 then playerY = 0   ; went off top

 gosub testCollisions
 rem if maxOrbs = 0 then gosub _displayPortal
 tempX = portalX + 10
 tempY = portalY + 10
 if orbsLeft = 0 then gosub displayPortal
 if orbsLeft = 0 && boxcollision(playerX, playerY, 13, 9,  tempX,  tempY, 6, 6) then goto initLevel
 plotchars 'orbs left' 2 20 0
 k = converttobcd(orbsLeft)
 plotvalue font 1 k 2 60 0
 plotvalue font 1 score0 6 124 0

 doublebuffer flip 2
 goto gameLoop


testCollisions
 m = maxOrbs - 1
 for i = 0 to m
     tempCaptured = orbCaptured[i]
    if tempCaptured = 1 then goto _skipCollide
    tempX = orbX[i]
    tempY = orbY[i]
    if boxcollision(playerX, playerY, 13, 9,  tempX,  tempY, 8, 8) then goto _doCollide
    goto _skipCollide 
_doCollide
    score0 = score0 + 10
    orbCaptured[i] = 1
    orbsLeft = orbsLeft - 1
_skipCollide
 next

 return

displayPortal

 tempY = portalY + 16
 plotsprite portal1_top 3 portalX portalY portalAnimFrame
 plotsprite portal1_bottom 3 portalX tempY portalAnimFrame
 portalAnimWait = portalAnimWait +1
 if portalAnimWait > 2 then  portalAnimFrame = portalAnimFrame + 1 : portalAnimWait = 0
 if portalAnimFrame > 1 then portalAnimFrame = 0

 return


makeOrbs

 rem ************************************
 rem * fill up orbs to display
 rem ************************************
 
 m = maxOrbs - 1

 for i = 0 to m
_getX 
    tempX = rand 
    if tempX > 152  then goto _getX
_getY    
    tempY = rand 
    if tempY > 184 then goto _getY  
    orbX[i] = tempX
    orbY[i] = tempY
    r = rand
    if r < 255  then orbXVelocity[i] =  0 : orbYVelocity[i] =  -1 
    if r < 228  then orbXVelocity[i] =  1 : orbYVelocity[i] =  -1 
    if r < 196  then orbXVelocity[i] =  1 : orbYVelocity[i] =   0
    if r < 164  then orbXVelocity[i] =  1 : orbYVelocity[i] =   1
    if r < 128  then orbXVelocity[i] =  0 : orbYVelocity[i] =   1
    if r < 96   then orbXVelocity[i] = -1 : orbYVelocity[i] =   1
    if r < 64   then orbXVelocity[i] = -1 : orbYVelocity[i] =   0
    if r < 32   then orbXVelocity[i] = -1 : orbYVelocity[i] =  -1
    
     r = rand

    if r < 255  then orbAnimFrame[i] = 0
    if r < 213   then orbAnimFrame[i] = 1
    if r < 170   then orbAnimFrame[i] = 2
    if r < 127   then orbAnimFrame[i] = 3
    if r < 84   then orbAnimFrame[i] = 4
    if r < 42   then orbAnimFrame[i] = 5
  
    orbAnimWait[i] = 0
    orbCaptured[i] = 0
_orbDone    
 next    
 
 return

